// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

PRAGMA_DISABLE_DEPRECATION_WARNINGS
class UObject;
struct FVector;
class ULeapFrame;
#ifdef LEAPMOTION_LeapController_generated_h
#error "LeapController.generated.h already included, missing '#pragma once' in LeapController.h"
#endif
#define LEAPMOTION_LeapController_generated_h

#define Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h_23_RPC_WRAPPERS \
 \
	DECLARE_FUNCTION(execSetInterfaceDelegate) \
	{ \
		P_GET_OBJECT(UObject,Z_Param_NewDelegate); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		this->SetInterfaceDelegate(Z_Param_NewDelegate); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetLeapMountToHMDOffset) \
	{ \
		P_GET_STRUCT(FVector,Z_Param_Offset); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		this->SetLeapMountToHMDOffset(Z_Param_Offset); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execEnableGesture) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_GestureType); \
		P_GET_UBOOL(Z_Param_Enable); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		this->EnableGesture(LeapGestureType(Z_Param_GestureType),Z_Param_Enable); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execEnableBackgroundTracking) \
	{ \
		P_GET_UBOOL(Z_Param_TrackInBackground); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		this->EnableBackgroundTracking(Z_Param_TrackInBackground); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execEnableImageSupport) \
	{ \
		P_GET_UBOOL(Z_Param_AllowImages); \
		P_GET_UBOOL(Z_Param_EmitImageEvents); \
		P_GET_UBOOL(Z_Param_UseGammaCorrection); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		this->EnableImageSupport(Z_Param_AllowImages,Z_Param_EmitImageEvents,Z_Param_UseGammaCorrection); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execOptimizeForHMD) \
	{ \
		P_GET_UBOOL(Z_Param_UseTopdown); \
		P_GET_UBOOL(Z_Param_AutoRotate); \
		P_GET_UBOOL(Z_Param_AutoShift); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		this->OptimizeForHMD(Z_Param_UseTopdown,Z_Param_AutoRotate,Z_Param_AutoShift); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execIsServiceConnected) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=this->IsServiceConnected(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execHasFocus) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=this->HasFocus(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execFrame) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_History); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(ULeapFrame**)Z_Param__Result=this->Frame(Z_Param_History); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execIsConnected) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=this->IsConnected(); \
		P_NATIVE_END; \
	}


#define Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h_23_RPC_WRAPPERS_NO_PURE_DECLS \
 \
	DECLARE_FUNCTION(execSetInterfaceDelegate) \
	{ \
		P_GET_OBJECT(UObject,Z_Param_NewDelegate); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		this->SetInterfaceDelegate(Z_Param_NewDelegate); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execSetLeapMountToHMDOffset) \
	{ \
		P_GET_STRUCT(FVector,Z_Param_Offset); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		this->SetLeapMountToHMDOffset(Z_Param_Offset); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execEnableGesture) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_GestureType); \
		P_GET_UBOOL(Z_Param_Enable); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		this->EnableGesture(LeapGestureType(Z_Param_GestureType),Z_Param_Enable); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execEnableBackgroundTracking) \
	{ \
		P_GET_UBOOL(Z_Param_TrackInBackground); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		this->EnableBackgroundTracking(Z_Param_TrackInBackground); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execEnableImageSupport) \
	{ \
		P_GET_UBOOL(Z_Param_AllowImages); \
		P_GET_UBOOL(Z_Param_EmitImageEvents); \
		P_GET_UBOOL(Z_Param_UseGammaCorrection); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		this->EnableImageSupport(Z_Param_AllowImages,Z_Param_EmitImageEvents,Z_Param_UseGammaCorrection); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execOptimizeForHMD) \
	{ \
		P_GET_UBOOL(Z_Param_UseTopdown); \
		P_GET_UBOOL(Z_Param_AutoRotate); \
		P_GET_UBOOL(Z_Param_AutoShift); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		this->OptimizeForHMD(Z_Param_UseTopdown,Z_Param_AutoRotate,Z_Param_AutoShift); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execIsServiceConnected) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=this->IsServiceConnected(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execHasFocus) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=this->HasFocus(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execFrame) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_History); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(ULeapFrame**)Z_Param__Result=this->Frame(Z_Param_History); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execIsConnected) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=this->IsConnected(); \
		P_NATIVE_END; \
	}


#define Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h_23_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesULeapController(); \
	friend LEAPMOTION_API class UClass* Z_Construct_UClass_ULeapController(); \
	public: \
	DECLARE_CLASS(ULeapController, UActorComponent, COMPILED_IN_FLAGS(0), 0, TEXT("/Script/LeapMotion"), NO_API) \
	DECLARE_SERIALIZER(ULeapController) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h_23_INCLASS \
	private: \
	static void StaticRegisterNativesULeapController(); \
	friend LEAPMOTION_API class UClass* Z_Construct_UClass_ULeapController(); \
	public: \
	DECLARE_CLASS(ULeapController, UActorComponent, COMPILED_IN_FLAGS(0), 0, TEXT("/Script/LeapMotion"), NO_API) \
	DECLARE_SERIALIZER(ULeapController) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h_23_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API ULeapController(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(ULeapController) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, ULeapController); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(ULeapController); \
private: \
	/** Private move- and copy-constructors, should never be used */ \
	NO_API ULeapController(ULeapController&&); \
	NO_API ULeapController(const ULeapController&); \
public:


#define Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h_23_ENHANCED_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API ULeapController(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { }; \
private: \
	/** Private move- and copy-constructors, should never be used */ \
	NO_API ULeapController(ULeapController&&); \
	NO_API ULeapController(const ULeapController&); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, ULeapController); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(ULeapController); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(ULeapController)


#define Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h_23_PRIVATE_PROPERTY_OFFSET \
	FORCEINLINE static uint32 __PPO__PFrame() { return STRUCT_OFFSET(ULeapController, PFrame); } \
	FORCEINLINE static uint32 __PPO__PEventHand() { return STRUCT_OFFSET(ULeapController, PEventHand); } \
	FORCEINLINE static uint32 __PPO__PEventFinger() { return STRUCT_OFFSET(ULeapController, PEventFinger); } \
	FORCEINLINE static uint32 __PPO__PEventGesture() { return STRUCT_OFFSET(ULeapController, PEventGesture); } \
	FORCEINLINE static uint32 __PPO__PEventCircleGesture() { return STRUCT_OFFSET(ULeapController, PEventCircleGesture); } \
	FORCEINLINE static uint32 __PPO__PEventKeyTapGesture() { return STRUCT_OFFSET(ULeapController, PEventKeyTapGesture); } \
	FORCEINLINE static uint32 __PPO__PEventScreenTapGesture() { return STRUCT_OFFSET(ULeapController, PEventScreenTapGesture); } \
	FORCEINLINE static uint32 __PPO__PEventSwipeGesture() { return STRUCT_OFFSET(ULeapController, PEventSwipeGesture); } \
	FORCEINLINE static uint32 __PPO__PEventImage1() { return STRUCT_OFFSET(ULeapController, PEventImage1); } \
	FORCEINLINE static uint32 __PPO__PEventImage2() { return STRUCT_OFFSET(ULeapController, PEventImage2); }


#define Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h_20_PROLOG
#define Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h_23_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h_23_PRIVATE_PROPERTY_OFFSET \
	Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h_23_RPC_WRAPPERS \
	Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h_23_INCLASS \
	Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h_23_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h_23_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h_23_PRIVATE_PROPERTY_OFFSET \
	Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h_23_RPC_WRAPPERS_NO_PURE_DECLS \
	Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h_23_INCLASS_NO_PURE_DECLS \
	Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h_23_ENHANCED_CONSTRUCTORS \
static_assert(false, "Unknown access specifier for GENERATED_BODY() macro in class LeapController."); \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID Engine_Plugins_Runtime_LeapMotion_Source_LeapMotion_Public_LeapController_h


PRAGMA_ENABLE_DEPRECATION_WARNINGS
